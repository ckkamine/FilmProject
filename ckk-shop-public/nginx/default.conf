
# Oktoplace 
upstream oktoplace {
  server 127.0.0.1:3001;
}

upstream oktoplace_shop {
  server 127.0.0.1:8081;
}

server {
  listen 443 ssl;
  server_name shop.oktoplace.com;
  
  ssl_certificate /etc/letsencrypt/live/oktoplace.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/oktoplace.com/privkey.pem; # managed by Certbot

  location / {
	proxy_buffering off;
	proxy_pass http://oktoplace_shop;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# enable WebSockets support
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
  }
}

server {
  listen 443 ssl;
  server_name oktoplace.com;
  
  ssl_certificate /etc/letsencrypt/live/oktoplace.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/oktoplace.com/privkey.pem; # managed by Certbot

  location / {
	proxy_buffering off;
	proxy_pass http://oktoplace;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# enable WebSockets support
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
  }
}


# Oktoplace admin 
upstream oktoplace_admin {
  server 127.0.0.1:3000;
}

upstream oktoplace_data {
  server 127.0.0.1:8080;
}

server {
  listen 443 ssl;
  server_name data.oktoplace.com;
  
  ssl_certificate /etc/letsencrypt/live/oktoplace.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/oktoplace.com/privkey.pem; # managed by Certbot

  location / {
	proxy_buffering off;
	proxy_pass http://oktoplace_data;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# enable WebSockets support
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
  }
}

server {
  listen 443 ssl;
  server_name admin.oktoplace.com;
  
  ssl_certificate /etc/letsencrypt/live/oktoplace.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/oktoplace.com/privkey.pem; # managed by Certbot

  location / {
	proxy_buffering off;
	proxy_pass http://oktoplace_admin;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# enable WebSockets support
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
  }
}

# Mongodb Express
upstream mongodb {
  server 127.0.0.1:8082;
}

server {
  listen 443 ssl;
  server_name mongodb.oktoplace.com;
  
  ssl_certificate /etc/letsencrypt/live/oktoplace.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/oktoplace.com/privkey.pem; # managed by Certbot

  location / {
	proxy_buffering off;
	proxy_pass http://mongodb;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# enable WebSockets support
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
  }
}

# Portainer 
upstream portainer {
  server 127.0.0.1:9000;
}

server {
  listen 443 ssl;
  server_name portainer.oktoplace.com;
  
  ssl_certificate /etc/letsencrypt/live/oktoplace.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/oktoplace.com/privkey.pem; # managed by Certbot

  location / {
	proxy_buffering off;
	proxy_pass http://portainer;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# enable WebSockets support
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
  }
}

# Grafana
upstream grafana {
  server 127.0.0.1:3002;
}

server {
  listen 443 ssl;
  server_name grafana.oktoplace.com;
  
  ssl_certificate /etc/letsencrypt/live/oktoplace.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/oktoplace.com/privkey.pem; # managed by Certbot

  location / {
	proxy_buffering off;
	proxy_pass http://grafana;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# enable WebSockets support
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
  }
}

server {

    root /var/www/html;
    server_name solr.oktoplace.com mongodb.oktoplace.com data.oktoplace.com shop.oktoplace.com oktoplace.com kibana.oktoplace.com admin.oktoplace.com; # managed by Certbot


	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/oktoplace.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/oktoplace.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = mongodb.oktoplace.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = solr.oktoplace.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = kibana.oktoplace.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = admin.oktoplace.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = shop.oktoplace.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = data.oktoplace.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = grafana.oktoplace.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = oktoplace.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    
    if ($host = portainer.oktoplace.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
    server_name grafana.oktoplace.com solr.oktoplace.com mongodb.oktoplace.com data.oktoplace.com shop.oktoplace.com oktoplace.com kibana.oktoplace.com admin.oktoplace.com;
    return 404; # managed by Certbot

}
